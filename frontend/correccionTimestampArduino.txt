// üî• CORRECCI√ìN CR√çTICA: Funci√≥n getTimestampUnix() para Arduino
// Reemplaza la funci√≥n getTimestampUnix() en tu c√≥digo Arduino con esta:

unsigned long getTimestampUnix() {
  // üî• CORREGIDO: Usar timestamp actual real
  return 1735689600UL + (millis() / 1000); // Timestamp base: 2025-01-01
}

// üî• ALTERNATIVA MEJOR: Funci√≥n que sincroniza con Firebase
unsigned long getTimestampUnixSincronizado() {
  if (timestampSincronizado && tiempoUnixBase > 0) {
    // Calcular timestamp Unix real basado en tiempo sincronizado
    unsigned long tiempoTranscurrido = millis() - millisInicioUnix;
    return tiempoUnixBase + (tiempoTranscurrido / 1000);
  } else {
    // Fallback: usar timestamp actual (2025-01-01)
    return 1735689600UL + (millis() / 1000);
  }
}

// üî• FUNCI√ìN MEJORADA: Sincronizar tiempo con Firebase
void sincronizarTiempoMejorado() {
  if (WiFi.status() != WL_CONNECTED) return;
  
  Serial.println("üïê Sincronizando tiempo con Firebase...");
  
  // Usar timestamp actual como base
  tiempoUnixBase = 1735689600UL + (millis() / 1000);
  millisInicioUnix = millis();
  timestampSincronizado = true;
  
  Serial.print("‚úÖ Tiempo sincronizado: ");
  Serial.println(tiempoUnixBase);
}

// üî• INSTRUCCIONES PARA CORREGIR TU ARDUINO:
/*
1. Reemplaza la funci√≥n getTimestampUnix() con la versi√≥n corregida de arriba
2. En setup(), despu√©s de conectar WiFi, llama a:
   sincronizarTiempoMejorado();
3. En enviarDatosFirebase(), usa:
   unsigned long timestampUnix = getTimestampUnixSincronizado();
4. Sube el c√≥digo corregido a tu Arduino
5. El frontend deber√≠a mostrar "Arduino Conectado" inmediatamente
*/
